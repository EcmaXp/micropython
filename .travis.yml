language: c
compiler:
  - gcc

before_script:
  - sudo add-apt-repository -y ppa:fkrull/deadsnakes
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:terry.guo/gcc-arm-embedded
  - sudo apt-get update -qq
  #[OPENCOM-ONLY]#- sudo apt-get install -y python3.4 python3 gcc-4.7 gcc-multilib gcc-arm-none-eabi qemu-system mingw32
  - sudo apt-get install -y python3.4 python3 gcc-4.7 gcc-multilib
  # For teensy build
  - sudo apt-get install realpath
  # For coverage testing
  - sudo pip install cpp-coveralls

script:
  - make -C opencom
  #[OPENCOM-ONLY]#- make -C minimal test
  #[OPENCOM-ONLY]#- make -C unix CC=gcc-4.7
  #[OPENCOM-ONLY]#- make -C unix-cpy CC=gcc-4.7
  #[OPENCOM-ONLY]#- make -C bare-arm
  #[OPENCOM-ONLY]#- make -C qemu-arm test
  #[OPENCOM-ONLY]#- make -C stmhal
  #[OPENCOM-ONLY]#- make -C stmhal -B MICROPY_PY_WIZNET5K=1 MICROPY_PY_CC3K=1
  #[OPENCOM-ONLY]#- make -C stmhal BOARD=STM32F4DISC
  #[OPENCOM-ONLY]#- make -C teensy
  #[OPENCOM-ONLY]#- make -C cc3200 BTARGET=application BTYPE=release
  #[OPENCOM-ONLY]#- make -C cc3200 BTARGET=bootloader  BTYPE=release
  #[OPENCOM-ONLY]#- make -C windows CROSS_COMPILE=i586-mingw32msvc-

  # run tests without coverage info
  #- (cd tests && MICROPY_CPYTHON3=python3.4 ./run-tests)
  #- (cd tests && MICROPY_CPYTHON3=python3.4 ./run-tests --emit native)

  # run tests with coverage info
  #[OPENCOM-ONLY]#- make -C unix CC=gcc-4.7 coverage
  #[OPENCOM-ONLY]#- (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests)
  #[OPENCOM-ONLY]#- (cd tests && MICROPY_CPYTHON3=python3.4 MICROPY_MICROPYTHON=../unix/micropython_coverage ./run-tests --emit native)

#[OPENCOM-ONLY]#after_success:
  #[OPENCOM-ONLY]#- (cd unix && coveralls --root .. --build-root . --gcov $(which gcov-4.7) --gcov-options '\-o build-coverage/' --include py --include extmod)

#[OPENCOM-ONLY]#after_failure:
  #[OPENCOM-ONLY]#- (cd tests && for exp in *.exp; do testbase=$(basename $exp .exp); echo -e "\nFAILURE $testbase"; diff -u $testbase.exp $testbase.out; done)
  #[OPENCOM-ONLY]#- (grep "FAIL" qemu-arm/build/console.out)
